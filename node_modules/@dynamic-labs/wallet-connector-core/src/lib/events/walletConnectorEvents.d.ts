import EventEmitter from 'eventemitter3';
import { InternalWalletConnector } from '../WalletConnector';
type AutoConnectEventProps = {
    connector: InternalWalletConnector;
};
type ProviderReadyEventProps = {
    connector: InternalWalletConnector;
};
export type WalletConnectorEvents = {
    /**
     * This is useful for when we want to auto-connect/login with a wallet
     * without the user having to select it from the list, as long as
     * the wallet is already connected to the dapp
     *
     * For example, we can auto-connect to a Safe wallet from a a Safe App
     */
    autoConnect: (props: AutoConnectEventProps) => void;
    /**
     * This is useful for when we want to know when the wallet provider
     * is ready to be used
     */
    providerReady: (props: ProviderReadyEventProps) => void;
};
export declare const walletConnectorEvents: EventEmitter<WalletConnectorEvents, any>;
export type WalletConnectorEventEmitter = typeof walletConnectorEvents;
export {};
