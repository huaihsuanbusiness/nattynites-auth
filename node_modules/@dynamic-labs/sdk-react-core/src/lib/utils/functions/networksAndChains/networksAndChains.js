'use client'
import { ChainEnumToVerifiedCredentialName } from '../../constants/values.js';

const getNetworkInfoEntry = (chain, networkInfo) => {
    if (!chain || !chain.symbol) {
        return;
    }
    const normalizedChainSymbol = chain.symbol === 'ETH' || chain.symbol === 'EVM'
        ? 'evm'
        : chain.symbol.toLowerCase();
    const networkData = networkInfo[normalizedChainSymbol] ||
        networkInfo[ChainEnumToVerifiedCredentialName[normalizedChainSymbol.toUpperCase()]];
    if (!networkData)
        return;
    if (normalizedChainSymbol === 'evm') {
        return networkData.find((e) => e.chainId === (chain === null || chain === void 0 ? void 0 : chain.chainId));
    }
    // Solana, etc
    return networkData[0];
};
const getEvmChainName = (chainId) => {
    const map = {
        1: 'Ethereum',
        10: 'OP Mainnet',
        11155111: 'Sepolia',
        137: 'Polygon',
        42161: 'Arbitrum One',
        43114: 'Avalanche',
        8453: 'Base',
    };
    return map[chainId] || 'Unknown';
};

export { getEvmChainName, getNetworkInfoEntry };
