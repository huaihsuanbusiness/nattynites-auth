import { ProjectSettings, TokenBalance } from '@dynamic-labs/sdk-api-core';
import { UserProfile } from '@dynamic-labs/types';
import { WalletOption } from '../shared/types/wallets';
export type SdkStoreProps = {
    environmentId: string;
    storageSuffix?: string;
};
export type SdkStore = {
    environmentId: string;
    user: UserProfile | undefined;
    projectSettings: StoredProjectSettings;
    tokenBalancesState: TokenBalancesState;
    sendBalanceState: SendBalanceState;
    walletConnectorOptions: WalletOption[];
    loadingAndLifecycle: LoadingAndLifecycle;
};
export type LoadingAndLifecycle = {
    /**
     * Whether session validation has been performed.
     */
    sessionValidation: boolean;
};
export type SendBalanceState = {
    amount?: number;
    chainName?: string;
    nativePrice?: number;
};
export type TokenBalancesState = {
    error?: string;
    isLoading: boolean;
    tokenBalances: TokenBalance[] | undefined;
    isError: boolean;
};
export type StoredProjectSettings = {
    expiresAt: number | undefined;
    settings: ProjectSettings | undefined;
};
export type StateConfig = {
    [K in keyof SdkStore]: {
        initialValue: SdkStore[K];
        useLocalStorage?: boolean;
    };
};
