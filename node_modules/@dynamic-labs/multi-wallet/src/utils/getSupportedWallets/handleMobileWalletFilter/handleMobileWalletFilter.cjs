'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var utils = require('@dynamic-labs/utils');
var walletBook = require('@dynamic-labs/wallet-book');

const handleMobileWalletFilter = (walletBook$1, walletKey, metadata) => {
    if (!metadata.mobile)
        return false;
    /**
     * WalletConnect provides a "universal" and "native" deep link. They recommend using
     * the universal deep link over the native one due to UX differences, and our current
     * implementation uses only universal. This means we need to filter for wallets that
     * have a universal deep link available.
     */
    const hasWalletConnectLink = Boolean(metadata.mobile.universal) || Boolean(metadata.mobile.native);
    const isWalletConnectWallet = metadata.walletConnect !== undefined;
    if (utils.isIPad() || utils.isIPhone()) {
        const hasIOSLink = Boolean(walletBook.getWalletLinks(walletBook$1, walletKey).ios);
        return !isWalletConnectWallet
            ? hasIOSLink
            : hasIOSLink && hasWalletConnectLink;
    }
    else {
        const hasAndroidLink = Boolean(walletBook.getWalletLinks(walletBook$1, walletKey).android);
        return !isWalletConnectWallet
            ? hasAndroidLink
            : hasAndroidLink && hasWalletConnectLink;
    }
};

exports.handleMobileWalletFilter = handleMobileWalletFilter;
